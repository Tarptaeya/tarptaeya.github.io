{"title": "Fifth week of coding phase, GSoC'18", "date": "2018-06-17", "tags": ["GSoC", "Falkon", "KDE"], "archived": "y", "description": "This includes developing GUI for QML plugins. Two new APIs are introduced for this - BrowserAction API and SideBar API", "slug": "fifth-week-of-coding-phase-gsoc-18-2018-06-17", "content": "<p><style>\nimg {\n    margin-left: 10%;\n    margin-right: 10%;\n    width: 80%;\n    height: auto;\n    display: block;\n}\n</style>\nThe week was totally involved in developing the <strong>GUI</strong> for QML Plugins. The follwoing APIs are developed:</p>\n\n<ul>\n<li>BrowserAction API: to add a GUI popup button to navigation tool bar and status bar</li>\n<li>SideBar API: to add a side bar widget to the browser</li>\n</ul>\n\n<p>Below are the screeshots of the <a href=\"https://cgit.kde.org/falkon.git/tree/src/scripts/helloqml?h=anmolgautam\">Hello QML plugin</a> from my working <a href=\"https://cgit.kde.org/falkon.git/log/?h=anmolgautam\">branch</a></p>\n\n<h2>BrowserAction Button</h2>\n\n<p>Browser Action Button can be added to either Navigation Tool Bar or Status Bar or both.\n<img src=\"browser_action_button.png\" alt=\"Browser<em>Action</em>Button\" /></p>\n\n<h2>BrowserAction Popup</h2>\n\n<p>The popup for Browser Action Button is in form of <a href=\"http://doc.qt.io/qt-5/qml-qtquick-window-window.html\">QML Window</a>. This part took much time to develop because:</p>\n\n<ul>\n<li>To show the GUI, QQuickWidget (QWidget) or QQucikWindow (QWindow) can be used.</li>\n<li>Now popup property is a QQmlComponent thus the source Url is not known. Also QQuickWidget uses url - thus only solution left is to use QQuickWindow (by casting object created using QQmlComponent::create)</li>\n<li>Now to show popup the Qt::Popup flag is needed for QQuickWindow.</li>\n</ul>\n\n<p>Everything is fine upto this until I found that this didn't worked. My Mentor (David Rosca) explained that this is because the QWindow is not grabing mouse and keyboard events - which means that the window is not activated - so I added QWindow::requestActivate and It works like a charm!\n<img src=\"browser_action_popup.png\" alt=\"Browser<em>Action</em>Popup\" /></p>\n\n<h2>SideBar Menu</h2>\n\n<p><img src=\"sidebar_menu.png\" alt=\"SideBar_Menu\" /></p>\n\n<h2>SideBar</h2>\n\n<p>Again SideBar menu is a QQuickWindow which is embeded into the browser using QWidget::createWindowContainer.\n<img src=\"sidebar.png\" alt=\"SideBar\" /></p>\n\n<p><hr/>\nAgain, a great thanks to my mentor David Rosca to help me in developing the APIs for GUI.</p>\n\n<p>Happy Fathers Day!</p>\n"}