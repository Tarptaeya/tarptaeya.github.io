{"title": "Eigth & Ninth week of coding phase, GSoC'18", "date": "2018-07-15", "tags": ["GSoC", "Falkon", "KDE"], "archived": "y", "description": "The third phase of coding phase has begun. During this period, userscript API, extension scheme API and ability to register a QtObject as an external JavaScript object are developed.", "slug": "eigth-ninth-week-of-coding-phase-gsoc-18-2018-07-15", "content": "<p>I am very happy that the third phase of coding phase has begun. The following work is done in eighth &amp; ninth week:</p>\n\n<ul>\n<li>UserScript API</li>\n<li>Ability to register external QtObject</li>\n<li>ExtensionScheme API</li>\n</ul>\n\n<h2>UserScript API</h2>\n\n<p>The API to interact with browser user-scripts. This will enable the plugin to create, register, remove, and get all the user-scripts loaded in the browser. Also the scripts registered by it will automatically gets unregistered when the plugin unloads.</p>\n\n<h2>Ability to register external QtObject</h2>\n\n<p>Since the UserScript API is developed, so the next step was to develop a channel between qml-plugin and webengine. The ExternalJsObject type will enable a QtObject to register as external js object as Falkon.ExternalJsObject.registerExtraObject ({id, object}) and Falkon.ExternalJsObject.unregisterExtraObject({object}) to unregister the object.</p>\n\n<h2>ExtensionScheme API</h2>\n\n<p>Now as both UserScript and ExternalJsObject APIs are developed, the next step as suggested by my mentor was to implement an <strong>extension://</strong> page for qml-plugins.</p>\n\n<p>This time, unfortunately I am yet to add the documentation &amp; tests of the following APIs, but I will complete it soon.</p>\n\n<p>Happy Monsoon :-)</p>\n"}